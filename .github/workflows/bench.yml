name: Benchmark
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '57 7 * * *'
  workflow_dispatch:
  repository_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install build dependencies.
        run: |
          sudo apt-get install cmake ninja-build
      - name: Check out the test suite.
        uses: actions/checkout@v2
      - name: Download the latest llvm-mos release ZIP.
        run: |
          curl -L -o llvm-mos.zip \
            https://github.com/llvm-mos/llvm-mos/releases/download/llvm-mos-linux-main/llvm-mos-linux-main.zip
      - name: Unzip llvm-mos.
        run: unzip llvm-mos.zip
      - name: Check out the SDK.
        uses: actions/checkout@v2
        with:
          repository: 'mrk-its/llvm-mos-sdk'
          ref: 'abort_exit'
          path: 'llvm-mos-sdk'
      - name: Build the SDK.
        run: |
          cd llvm-mos-sdk
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/llvm-mos -G "Ninja" ..
          ninja install
      - name: Build the benchmarks.
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_C_COMPILER=$GITHUB_WORKSPACE/llvm-mos/bin/mos-sim-clang \
            -DCMAKE_CXX_COMPILER=$GITHUB_WORKSPACE/llvm-mos/bin/mos-sim-clang++ \
            -DARCH=MOS \
            -DTEST_SUITE_SUBDIRS=SingleSource/ \
            -DTEST_SUITE_RUN_UNDER=$GITHUB_WORKSPACE/llvm-mos/bin/mos-sim \
            -DTEST_SUITE_USER_MODE_EMULATION=yes \
            -DTEST_SUITE_LLVM_SIZE="" \
            -DCMAKE_STRIP="" \
            -G Ninja \
            -C../cmake/caches/Os.cmake \
            ..
          ninja SingleSource/Benchmarks/all
      - name: Run the benchmark.
        run: |
          LLVM_MOS=$GITHUB_WORKSPACE/llvm-mos LLVM_MOS_SDK=$GITHUB_WORKSPACE/llvm-mos ./bench.sh > output.json
          cat output.json
      - name: Store the benchmark results.
        uses: llvm-mos/github-action-benchmark@master
        with:
          name: Benchmark -Os
          tool: 'googlecpp'
          output-file-path: output.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
